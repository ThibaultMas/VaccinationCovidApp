{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VaccinationService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllVaccinationCenter(city) {\n    let params = {};\n    if (city) {\n      params['city'] = city;\n    }\n    return this.http.get(\"/api/public/patient/readcenters\", {\n      params: params\n    });\n  }\n  getCenterById(center_id) {\n    return this.http.get(\"/api/public/center/\" + center_id);\n  }\n  createBooking(center_id, booking) {\n    return this.http.post(\"/api/public/patient/pregister/\" + center_id, booking, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  createCenter(center) {\n    return this.http.post(\"/api/private/superadmin/createcenter\", center, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  updateCenter(center_id, center) {\n    return this.http.put(\"/api/private/superadmin/updatecenter/\" + center_id, center, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  getAdminsByCenterId(center_id) {\n    return this.http.get(\"api/private/superadmin/readadmins/\" + center_id);\n  }\n  getDoctorsByCenterId(center_id) {\n    return this.http.get(\"api/private/superadmin/readdoctors/\" + center_id);\n  }\n  getAdminCenter(admin_id) {\n    return this.http.get(\"/api/private/admin/admincenter/\" + admin_id);\n  }\n}\n_class = VaccinationService;\n_class.ɵfac = function VaccinationService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["VaccinationService","constructor","http","getAllVaccinationCenter","city","params","get","getCenterById","center_id","createBooking","booking","post","headers","createCenter","center","updateCenter","put","getAdminsByCenterId","getDoctorsByCenterId","getAdminCenter","admin_id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/VaccinationCovidApp/vaccination-app/src/app/vaccination.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Booking } from './vaccination-center/booking';\nimport { VaccinationCenter } from './vaccination-center-list/vaccination-center';\nimport { User } from './authentification/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VaccinationService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllVaccinationCenter(city?: string) : Observable<VaccinationCenter[]>{\n    let params: { [key: string]: string } = {};\n    if(city){\n      params['city'] = city;\n    }\n    return this.http.get<VaccinationCenter[]>(\"/api/public/patient/readcenters\", {\n      params:params\n    });\n  }\n\n\n  getCenterById(center_id: Number): Observable<VaccinationCenter> {\n    return this.http.get<VaccinationCenter>(\"/api/public/center/\"+center_id);\n  }\n\n  createBooking(center_id:Number, booking:Booking) : Observable<Booking>{\n    return this.http.post<Booking>(\"/api/public/patient/pregister/\"+center_id, booking, {headers: {'Content-Type': 'application/json'}});\n  }\n\n  createCenter(center:VaccinationCenter) : Observable<VaccinationCenter>{\n    return this.http.post<VaccinationCenter>(\"/api/private/superadmin/createcenter\", center, {headers: {'Content-Type': 'application/json'}});\n  }\n\n  updateCenter(center_id:Number, center:VaccinationCenter) : Observable<VaccinationCenter>{\n    return this.http.put<VaccinationCenter>(\"/api/private/superadmin/updatecenter/\"+center_id, center, {headers: {'Content-Type': 'application/json'}});\n  }\n\n  getAdminsByCenterId(center_id: number): Observable<User[]>{\n    return this.http.get<User[]>(\"api/private/superadmin/readadmins/\"+center_id);\n  }\n\n  getDoctorsByCenterId(center_id: number): Observable<User[]>{\n    return this.http.get<User[]>(\"api/private/superadmin/readdoctors/\"+center_id);\n  }\n\n  getAdminCenter(admin_id: Number) : Observable<VaccinationCenter>{\n    return this.http.get<VaccinationCenter>(\"/api/private/admin/admincenter/\"+admin_id);\n  }\n\n\n}\n"],"mappings":";;;AAUA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,uBAAuBA,CAACC,IAAa;IACnC,IAAIC,MAAM,GAA8B,EAAE;IAC1C,IAAGD,IAAI,EAAC;MACNC,MAAM,CAAC,MAAM,CAAC,GAAGD,IAAI;;IAEvB,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAAsB,iCAAiC,EAAE;MAC3ED,MAAM,EAACA;KACR,CAAC;EACJ;EAGAE,aAAaA,CAACC,SAAiB;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAoB,qBAAqB,GAACE,SAAS,CAAC;EAC1E;EAEAC,aAAaA,CAACD,SAAgB,EAAEE,OAAe;IAC7C,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,gCAAgC,GAACH,SAAS,EAAEE,OAAO,EAAE;MAACE,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EACtI;EAEAC,YAAYA,CAACC,MAAwB;IACnC,OAAO,IAAI,CAACZ,IAAI,CAACS,IAAI,CAAoB,sCAAsC,EAAEG,MAAM,EAAE;MAACF,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EAC3I;EAEAG,YAAYA,CAACP,SAAgB,EAAEM,MAAwB;IACrD,OAAO,IAAI,CAACZ,IAAI,CAACc,GAAG,CAAoB,uCAAuC,GAACR,SAAS,EAAEM,MAAM,EAAE;MAACF,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EACrJ;EAEAK,mBAAmBA,CAACT,SAAiB;IACnC,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,oCAAoC,GAACE,SAAS,CAAC;EAC9E;EAEAU,oBAAoBA,CAACV,SAAiB;IACpC,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,qCAAqC,GAACE,SAAS,CAAC;EAC/E;EAEAW,cAAcA,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAAClB,IAAI,CAACI,GAAG,CAAoB,iCAAiC,GAACc,QAAQ,CAAC;EACrF;;SAzCWpB,kBAAkB;;mBAAlBA,MAAkB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBxB,MAAkB;EAAAyB,OAAA,EAAlBzB,MAAkB,CAAA0B,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}