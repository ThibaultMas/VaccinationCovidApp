{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VaccinationService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllVaccinationCenter(city) {\n    let params = {};\n    if (city) {\n      params['city'] = city;\n    }\n    return this.http.get(\"/api/public/patient/readcenters\", {\n      params: params\n    });\n  }\n  getCenterById(id) {\n    return this.http.get(\"/api/public/center/\" + id);\n  }\n  createBooking(id, book) {\n    return this.http.post(\"/api/public/patient/pregister/\" + id, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n}\n_class = VaccinationService;\n_class.ɵfac = function VaccinationService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["VaccinationService","constructor","http","getAllVaccinationCenter","city","params","get","getCenterById","id","createBooking","book","post","headers","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/vaccination-app/src/app/vaccination.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { VaccinationCenter } from './vaccination-center/vaccination-center';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Booking } from './booking';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VaccinationService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllVaccinationCenter(city?: string) : Observable<VaccinationCenter[]>{\n    let params: { [key: string]: string } = {};\n    if(city){\n      params['city'] = city;\n    }\n    return this.http.get<VaccinationCenter[]>(\"/api/public/patient/readcenters\", {\n      params:params\n    });\n  }\n\n\n  getCenterById(id: Number): Observable<VaccinationCenter> {\n    return this.http.get<VaccinationCenter>(\"/api/public/center/\"+id);\n  }\n\n  createBooking(id:Number, book:Booking) : Observable<Booking>{\n    return this.http.post<Booking>(\"/api/public/patient/pregister/\"+id, {headers: {'Content-Type': 'application/json'}});\n  }\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,uBAAuBA,CAACC,IAAa;IACnC,IAAIC,MAAM,GAA8B,EAAE;IAC1C,IAAGD,IAAI,EAAC;MACNC,MAAM,CAAC,MAAM,CAAC,GAAGD,IAAI;;IAEvB,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAAsB,iCAAiC,EAAE;MAC3ED,MAAM,EAACA;KACR,CAAC;EACJ;EAGAE,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAoB,qBAAqB,GAACE,EAAE,CAAC;EACnE;EAEAC,aAAaA,CAACD,EAAS,EAAEE,IAAY;IACnC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,gCAAgC,GAACH,EAAE,EAAE;MAACI,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EACtH;;SArBWZ,kBAAkB;;mBAAlBA,MAAkB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBhB,MAAkB;EAAAiB,OAAA,EAAlBjB,MAAkB,CAAAkB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}