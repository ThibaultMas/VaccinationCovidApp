{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getUserByMail(mail) {\n    return this.http.get(\"/api/private/auth/usermail/\" + mail);\n  }\n  getUserById(id) {\n    return this.http.get(\"/api/private/auth/userid/\" + id);\n  }\n  getSuperAdmins() {\n    return this.http.get(\"api/private/superadmin/readsuperadmins\");\n  }\n  deleteSuperAdmin(id) {\n    return this.http.delete(\"/api/private/superadmin/deletesuperadmin/\" + id);\n  }\n  updateSuperAdmin(id, superAdmin) {\n    return this.http.put(\"/api/private/superadmin/updatesuperadmin/\" + id, superAdmin, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  createSuperAdmin(superAdmin) {\n    return this.http.post(\"/api/private/superadmin/createsuperadmin\", superAdmin, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  createAdmin(center_id, admin) {\n    return this.http.post(\"/api/private/superadmin/createadmin/\" + center_id, admin, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  deleteAdmin(id) {\n    return this.http.delete(\"/api/private/superadmin/deleteadmin/\" + id);\n  }\n  updateAdmin(id, center_id, admin) {\n    return this.http.put(\"/api/private/superadmin/updateadmin/\" + id + \"/\" + center_id, admin, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  createDoctor(center_id, doctor) {\n    return this.http.post(\"/api/private/superadmin/createdoctor/\" + center_id, doctor, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  deleteDoctor(id) {\n    return this.http.delete(\"/api/private/superadmin/deletedoctor/\" + id);\n  }\n  updateDoctor(id, center_id, doctor) {\n    return this.http.put(\"/api/private/superadmin/updatedoctor/\" + id + \"/\" + center_id, doctor, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserService","constructor","http","getUserByMail","mail","get","getUserById","id","getSuperAdmins","deleteSuperAdmin","delete","updateSuperAdmin","superAdmin","put","headers","createSuperAdmin","post","createAdmin","center_id","admin","deleteAdmin","updateAdmin","createDoctor","doctor","deleteDoctor","updateDoctor","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/VaccinationCovidApp/vaccination-app/src/app/user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from './authentification/user';\nimport { VaccinationCenter } from './vaccination-center-list/vaccination-center';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getUserByMail(mail: string): Observable<User>{\n    return this.http.get<User>(\"/api/private/auth/usermail/\"+mail);\n  }\n\n  getUserById(id: number): Observable<User>{\n    return this.http.get<User>(\"/api/private/auth/userid/\"+id);\n  }\n\n  getSuperAdmins() : Observable<User[]>{\n    return this.http.get<User[]>(\"api/private/superadmin/readsuperadmins\");\n  }\n\n  deleteSuperAdmin(id: number): Observable<User>{\n    return this.http.delete<User>(\"/api/private/superadmin/deletesuperadmin/\"+id);\n  }\n\n  updateSuperAdmin(id:Number, superAdmin: User) : Observable<User>{\n    return this.http.put<User>(\"/api/private/superadmin/updatesuperadmin/\"+id, superAdmin, {headers: {'Content-Type': 'application/json'}})\n  }\n\n  createSuperAdmin(superAdmin: User): Observable<User>{\n    return this.http.post<User>(\"/api/private/superadmin/createsuperadmin\", superAdmin, {headers: {'Content-Type': 'application/json'}});\n  }\n\n  createAdmin(center_id:Number, admin: User): Observable<User>{\n    return this.http.post<User>(\"/api/private/superadmin/createadmin/\"+center_id, admin, {headers: {'Content-Type': 'application/json'}});\n  }\n\n  deleteAdmin(id: number): Observable<User>{\n    return this.http.delete<User>(\"/api/private/superadmin/deleteadmin/\"+id);\n  }\n\n  updateAdmin(id:Number, center_id:Number, admin: User) : Observable<User>{\n    return this.http.put<User>(\"/api/private/superadmin/updateadmin/\"+id+\"/\"+center_id, admin, {headers: {'Content-Type': 'application/json'}})\n  }\n\n  createDoctor(center_id:Number, doctor: User): Observable<User>{\n    return this.http.post<User>(\"/api/private/superadmin/createdoctor/\"+center_id, doctor, {headers: {'Content-Type': 'application/json'}});\n  }\n\n  deleteDoctor(id: number): Observable<User>{\n    return this.http.delete<User>(\"/api/private/superadmin/deletedoctor/\"+id);\n  }\n\n  updateDoctor(id:Number, center_id:Number, doctor: User) : Observable<User>{\n    return this.http.put<User>(\"/api/private/superadmin/updatedoctor/\"+id+\"/\"+center_id, doctor, {headers: {'Content-Type': 'application/json'}})\n  }\n\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,aAAaA,CAACC,IAAY;IACxB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAO,6BAA6B,GAACD,IAAI,CAAC;EAChE;EAEAE,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,2BAA2B,GAACE,EAAE,CAAC;EAC5D;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAS,wCAAwC,CAAC;EACxE;EAEAI,gBAAgBA,CAACF,EAAU;IACzB,OAAO,IAAI,CAACL,IAAI,CAACQ,MAAM,CAAO,2CAA2C,GAACH,EAAE,CAAC;EAC/E;EAEAI,gBAAgBA,CAACJ,EAAS,EAAEK,UAAgB;IAC1C,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAO,2CAA2C,GAACN,EAAE,EAAEK,UAAU,EAAE;MAACE,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EACzI;EAEAC,gBAAgBA,CAACH,UAAgB;IAC/B,OAAO,IAAI,CAACV,IAAI,CAACc,IAAI,CAAO,0CAA0C,EAAEJ,UAAU,EAAE;MAACE,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EACtI;EAEAG,WAAWA,CAACC,SAAgB,EAAEC,KAAW;IACvC,OAAO,IAAI,CAACjB,IAAI,CAACc,IAAI,CAAO,sCAAsC,GAACE,SAAS,EAAEC,KAAK,EAAE;MAACL,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EACvI;EAEAM,WAAWA,CAACb,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACQ,MAAM,CAAO,sCAAsC,GAACH,EAAE,CAAC;EAC1E;EAEAc,WAAWA,CAACd,EAAS,EAAEW,SAAgB,EAAEC,KAAW;IAClD,OAAO,IAAI,CAACjB,IAAI,CAACW,GAAG,CAAO,sCAAsC,GAACN,EAAE,GAAC,GAAG,GAACW,SAAS,EAAEC,KAAK,EAAE;MAACL,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EAC7I;EAEAQ,YAAYA,CAACJ,SAAgB,EAAEK,MAAY;IACzC,OAAO,IAAI,CAACrB,IAAI,CAACc,IAAI,CAAO,uCAAuC,GAACE,SAAS,EAAEK,MAAM,EAAE;MAACT,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EACzI;EAEAU,YAAYA,CAACjB,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACQ,MAAM,CAAO,uCAAuC,GAACH,EAAE,CAAC;EAC3E;EAEAkB,YAAYA,CAAClB,EAAS,EAAEW,SAAgB,EAAEK,MAAY;IACpD,OAAO,IAAI,CAACrB,IAAI,CAACW,GAAG,CAAO,uCAAuC,GAACN,EAAE,GAAC,GAAG,GAACW,SAAS,EAAEK,MAAM,EAAE;MAACT,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC;EAC/I;;SAlDWd,WAAW;;mBAAXA,MAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX7B,MAAW;EAAA8B,OAAA,EAAX9B,MAAW,CAAA+B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}