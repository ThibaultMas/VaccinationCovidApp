{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../vaccination.service\";\nimport * as i3 from \"@angular/common\";\nfunction PlanningComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.center.name, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r0.center.address, \" \", ctx_r0.center.postal, \", \", ctx_r0.center.city, \" \");\n  }\n}\nexport class PlanningComponent {\n  constructor(route, vaccinationService) {\n    this.route = route;\n    this.vaccinationService = vaccinationService;\n  }\n  ngOnInit() {\n    const center_id = Number(this.route.snapshot.paramMap.get(\"centerid\"));\n    this.vaccinationService.getCenterById(center_id).subscribe(resultCenter => {\n      this.center = resultCenter;\n    });\n  }\n}\n_class = PlanningComponent;\n_class.ɵfac = function PlanningComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.VaccinationService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-planning\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"component\", 4, \"ngIf\"], [1, \"component\"], [1, \"details\"]],\n  template: function PlanningComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PlanningComponent_div_0_Template, 7, 4, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.center);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","center","name","ɵɵtextInterpolate3","address","postal","city","PlanningComponent","constructor","route","vaccinationService","ngOnInit","center_id","Number","snapshot","paramMap","get","getCenterById","subscribe","resultCenter","ɵɵdirectiveInject","i1","ActivatedRoute","i2","VaccinationService","selectors","decls","vars","consts","template","PlanningComponent_Template","rf","ctx","ɵɵtemplate","PlanningComponent_div_0_Template","ɵɵproperty"],"sources":["/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/VaccinationCovidApp/vaccination-app/src/app/planning/planning.component.ts","/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/VaccinationCovidApp/vaccination-app/src/app/planning/planning.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { VaccinationCenter } from '../vaccination-center-list/vaccination-center';\nimport { ActivatedRoute } from '@angular/router';\nimport { VaccinationService } from '../vaccination.service';\n\n@Component({\n  selector: 'app-planning',\n  templateUrl: './planning.component.html',\n  styleUrls: ['./planning.component.scss']\n})\nexport class PlanningComponent implements OnInit{\n  \n  center?: VaccinationCenter;\n\n  constructor(private route: ActivatedRoute, private vaccinationService: VaccinationService){}\n\n  ngOnInit(): void{\n    const center_id = Number(this.route.snapshot.paramMap.get(\"centerid\"));\n    this.vaccinationService.getCenterById(center_id).subscribe(resultCenter=>{\n      this.center = resultCenter;\n    })\n  }\n}\n","<div class=\"component\" *ngIf=\"center\">\n    <div class=\"details\">\n        <span> {{center.name}}</span><br/>\n        <span> {{center.address}} {{center.postal}}, {{center.city}} </span>\n    </div>\n</div>\n"],"mappings":";;;;;;;ICAAA,EAAA,CAAAC,cAAA,aAAsC;IAEvBD,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAAAH,EAAA,CAAAI,SAAA,SAAK;IAClCJ,EAAA,CAAAC,cAAA,WAAM;IAACD,EAAA,CAAAE,MAAA,GAAsD;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAD7DH,EAAA,CAAAK,SAAA,GAAe;IAAfL,EAAA,CAAAM,kBAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,IAAA,KAAe;IACfT,EAAA,CAAAK,SAAA,GAAsD;IAAtDL,EAAA,CAAAU,kBAAA,MAAAH,MAAA,CAAAC,MAAA,CAAAG,OAAA,OAAAJ,MAAA,CAAAC,MAAA,CAAAI,MAAA,QAAAL,MAAA,CAAAC,MAAA,CAAAK,IAAA,MAAsD;;;ADOrE,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,KAAqB,EAAUC,kBAAsC;IAArE,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,kBAAkB,GAAlBA,kBAAkB;EAAsB;EAE3FC,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC;IACtE,IAAI,CAACN,kBAAkB,CAACO,aAAa,CAACL,SAAS,CAAC,CAACM,SAAS,CAACC,YAAY,IAAE;MACvE,IAAI,CAAClB,MAAM,GAAGkB,YAAY;IAC5B,CAAC,CAAC;EACJ;;SAXWZ,iBAAiB;;mBAAjBA,MAAiB,EAAAd,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA7B,EAAA,CAAA2B,iBAAA,CAAAG,EAAA,CAAAC,kBAAA;AAAA;;QAAjBjB,MAAiB;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV9BtC,EAAA,CAAAwC,UAAA,IAAAC,gCAAA,iBAKM;;;MALkBzC,EAAA,CAAA0C,UAAA,SAAAH,GAAA,CAAA/B,MAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}