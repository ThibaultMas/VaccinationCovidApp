{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../vaccination.service\";\nimport * as i3 from \"../user.service\";\nexport class UpdateDoctorComponent {\n  constructor(route, centerService, userService) {\n    this.route = route;\n    this.centerService = centerService;\n    this.userService = userService;\n    this.doctorUpdated = false;\n  }\n  ngOnInit() {\n    const center_id = Number(this.route.snapshot.paramMap.get(\"centerid\"));\n    const id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.userService.getUserById(id).subscribe(resultDoctor => {\n      this.doctor = resultDoctor;\n    });\n    this.centerService.getCenterById(center_id).subscribe(resultCenter => {\n      this.center = resultCenter;\n    });\n    this.centerService.getAllVaccinationCenter().subscribe(resultCenters => {\n      this.centers = resultCenters;\n    });\n    this.selectedCenter = this.center;\n  }\n  updateAdmin() {\n    if (this.doctor) {\n      console.log(this.doctor.id, this.selectedCenter.id, this.doctor);\n      this.userService.updateDoctor(this.doctor.id, this.selectedCenter.id, this.doctor).subscribe();\n      this.doctorUpdated = true;\n    }\n  }\n}\n_class = UpdateDoctorComponent;\n_class.ɵfac = function UpdateDoctorComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.VaccinationService), i0.ɵɵdirectiveInject(i3.UserService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-update-doctor\"]],\n  decls: 2,\n  vars: 0,\n  template: function UpdateDoctorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"update-doctor works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UpdateDoctorComponent","constructor","route","centerService","userService","doctorUpdated","ngOnInit","center_id","Number","snapshot","paramMap","get","id","getUserById","subscribe","resultDoctor","doctor","getCenterById","resultCenter","center","getAllVaccinationCenter","resultCenters","centers","selectedCenter","updateAdmin","console","log","updateDoctor","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","VaccinationService","i3","UserService","selectors","decls","vars","template","UpdateDoctorComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/VaccinationCovidApp/vaccination-app/src/app/update-doctor/update-doctor.component.ts","/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/VaccinationCovidApp/vaccination-app/src/app/update-doctor/update-doctor.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { VaccinationCenter } from '../vaccination-center-list/vaccination-center';\nimport { User } from '../authentification/user';\nimport { VaccinationService } from '../vaccination.service';\nimport { UserService } from '../user.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-update-doctor',\n  templateUrl: './update-doctor.component.html',\n  styleUrls: ['./update-doctor.component.scss']\n})\nexport class UpdateDoctorComponent implements OnInit{\n\n  center!: VaccinationCenter;\n  selectedCenter!: VaccinationCenter;\n  centers!: VaccinationCenter[];\n  doctor?: User\n\n  \n  doctorUpdated = false;\n\n  constructor(private route:ActivatedRoute, private centerService: VaccinationService, private userService: UserService){}\n\n  ngOnInit(): void {\n      const center_id = Number(this.route.snapshot.paramMap.get(\"centerid\"));\n      const id = Number(this.route.snapshot.paramMap.get(\"id\"));\n      this.userService.getUserById(id).subscribe(resultDoctor=>{\n        this.doctor = resultDoctor;\n      })\n      this.centerService.getCenterById(center_id).subscribe(resultCenter=>{\n        this.center = resultCenter;\n      })\n\n      this.centerService.getAllVaccinationCenter().subscribe(resultCenters=>{\n        this.centers = resultCenters;\n      })\n\n      this.selectedCenter = this.center;\n      \n\n  }\n\n  updateAdmin(){\n    if(this.doctor){\n      console.log(this.doctor.id, this.selectedCenter.id, this.doctor)\n      this.userService.updateDoctor(this.doctor.id, this.selectedCenter.id, this.doctor).subscribe()\n      this.doctorUpdated = true;\n    }\n  }\n}\n","<p>update-doctor works!</p>\n"],"mappings":";;;;;AAYA,OAAM,MAAOA,qBAAqB;EAUhCC,YAAoBC,KAAoB,EAAUC,aAAiC,EAAUC,WAAwB;IAAjG,KAAAF,KAAK,GAALA,KAAK;IAAyB,KAAAC,aAAa,GAAbA,aAAa;IAA8B,KAAAC,WAAW,GAAXA,WAAW;IAFxG,KAAAC,aAAa,GAAG,KAAK;EAEkG;EAEvHC,QAAQA,CAAA;IACJ,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC;IACtE,MAAMC,EAAE,GAAGJ,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAI,CAACP,WAAW,CAACS,WAAW,CAACD,EAAE,CAAC,CAACE,SAAS,CAACC,YAAY,IAAE;MACvD,IAAI,CAACC,MAAM,GAAGD,YAAY;IAC5B,CAAC,CAAC;IACF,IAAI,CAACZ,aAAa,CAACc,aAAa,CAACV,SAAS,CAAC,CAACO,SAAS,CAACI,YAAY,IAAE;MAClE,IAAI,CAACC,MAAM,GAAGD,YAAY;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACf,aAAa,CAACiB,uBAAuB,EAAE,CAACN,SAAS,CAACO,aAAa,IAAE;MACpE,IAAI,CAACC,OAAO,GAAGD,aAAa;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACE,cAAc,GAAG,IAAI,CAACJ,MAAM;EAGrC;EAEAK,WAAWA,CAAA;IACT,IAAG,IAAI,CAACR,MAAM,EAAC;MACbS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,MAAM,CAACJ,EAAE,EAAE,IAAI,CAACW,cAAc,CAACX,EAAE,EAAE,IAAI,CAACI,MAAM,CAAC;MAChE,IAAI,CAACZ,WAAW,CAACuB,YAAY,CAAC,IAAI,CAACX,MAAM,CAACJ,EAAE,EAAE,IAAI,CAACW,cAAc,CAACX,EAAE,EAAE,IAAI,CAACI,MAAM,CAAC,CAACF,SAAS,EAAE;MAC9F,IAAI,CAACT,aAAa,GAAG,IAAI;;EAE7B;;SArCWL,qBAAqB;;mBAArBA,MAAqB,EAAA4B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,kBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;;QAArBnC,MAAqB;EAAAoC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZlCb,EAAA,CAAAe,cAAA,QAAG;MAAAf,EAAA,CAAAgB,MAAA,2BAAoB;MAAAhB,EAAA,CAAAiB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}