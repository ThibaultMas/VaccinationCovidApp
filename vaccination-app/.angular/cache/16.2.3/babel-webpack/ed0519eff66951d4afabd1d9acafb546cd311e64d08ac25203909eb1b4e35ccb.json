{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UpdateAdminComponent = class UpdateAdminComponent {\n  constructor(route, centerService, userService) {\n    this.route = route;\n    this.centerService = centerService;\n    this.userService = userService;\n    this.adminUpdated = false;\n  }\n  ngOnInit() {\n    const center_id = Number(this.route.snapshot.paramMap.get(\"centerid\"));\n    const id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.userService.getUserById(id).subscribe(resultAdmin => {\n      this.admin = resultAdmin;\n    });\n    this.centerService.getCenterById(center_id).subscribe(resultCenter => {\n      this.center = resultCenter;\n    });\n    this.centerService.getAllVaccinationCenter().subscribe(resultCenters => {\n      this.centers = resultCenters;\n    });\n    this.selectedCenter = this.center;\n  }\n  updateAdmin() {\n    if (this.admin) {\n      console.log(this.admin.id, this.selectedCenter.id, this.admin);\n      this.userService.updateAdmin(this.admin.id, this.selectedCenter.id, this.admin).subscribe();\n      this.adminUpdated = true;\n    }\n  }\n  isAdminCenter() {\n    console.log(this.selectedCenter.name);\n    return this.selectedCenter === this.center;\n  }\n};\nUpdateAdminComponent = __decorate([Component({\n  selector: 'app-update-admin',\n  templateUrl: './update-admin.component.html',\n  styleUrls: ['./update-admin.component.scss']\n})], UpdateAdminComponent);","map":{"version":3,"names":["Component","UpdateAdminComponent","constructor","route","centerService","userService","adminUpdated","ngOnInit","center_id","Number","snapshot","paramMap","get","id","getUserById","subscribe","resultAdmin","admin","getCenterById","resultCenter","center","getAllVaccinationCenter","resultCenters","centers","selectedCenter","updateAdmin","console","log","isAdminCenter","name","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/thibault_m/Desktop/Polytech/5A/Dev FullStack/VaccinationCovidApp/vaccination-app/src/app/update-admin/update-admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { VaccinationCenter } from '../vaccination-center-list/vaccination-center';\nimport { User } from '../authentification/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { VaccinationService } from '../vaccination.service';\n\n@Component({\n  selector: 'app-update-admin',\n  templateUrl: './update-admin.component.html',\n  styleUrls: ['./update-admin.component.scss']\n})\nexport class UpdateAdminComponent implements OnInit{\n\n  center!: VaccinationCenter;\n  selectedCenter!: VaccinationCenter;\n  centers!: VaccinationCenter[];\n  admin?: User\n\n  \n  adminUpdated = false;\n\n  constructor(private route:ActivatedRoute, private centerService: VaccinationService, private userService: UserService){}\n\n  ngOnInit(): void {\n      const center_id = Number(this.route.snapshot.paramMap.get(\"centerid\"));\n      const id = Number(this.route.snapshot.paramMap.get(\"id\"));\n      this.userService.getUserById(id).subscribe(resultAdmin=>{\n        this.admin = resultAdmin;\n      })\n      this.centerService.getCenterById(center_id).subscribe(resultCenter=>{\n        this.center = resultCenter;\n      })\n\n      this.centerService.getAllVaccinationCenter().subscribe(resultCenters=>{\n        this.centers = resultCenters;\n      })\n\n      this.selectedCenter = this.center;\n      \n\n  }\n\n  updateAdmin(){\n    if(this.admin){\n      console.log(this.admin.id, this.selectedCenter.id, this.admin)\n      this.userService.updateAdmin(this.admin.id, this.selectedCenter.id, this.admin).subscribe()\n      this.adminUpdated = true;\n    }\n  }\n\n  isAdminCenter(): boolean{\n    console.log(this.selectedCenter.name)\n    return this.selectedCenter === this.center;\n  }\n  \n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAU/BC,YAAoBC,KAAoB,EAAUC,aAAiC,EAAUC,WAAwB;IAAjG,KAAAF,KAAK,GAALA,KAAK;IAAyB,KAAAC,aAAa,GAAbA,aAAa;IAA8B,KAAAC,WAAW,GAAXA,WAAW;IAFxG,KAAAC,YAAY,GAAG,KAAK;EAEmG;EAEvHC,QAAQA,CAAA;IACJ,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC;IACtE,MAAMC,EAAE,GAAGJ,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAI,CAACP,WAAW,CAACS,WAAW,CAACD,EAAE,CAAC,CAACE,SAAS,CAACC,WAAW,IAAE;MACtD,IAAI,CAACC,KAAK,GAAGD,WAAW;IAC1B,CAAC,CAAC;IACF,IAAI,CAACZ,aAAa,CAACc,aAAa,CAACV,SAAS,CAAC,CAACO,SAAS,CAACI,YAAY,IAAE;MAClE,IAAI,CAACC,MAAM,GAAGD,YAAY;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACf,aAAa,CAACiB,uBAAuB,EAAE,CAACN,SAAS,CAACO,aAAa,IAAE;MACpE,IAAI,CAACC,OAAO,GAAGD,aAAa;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACE,cAAc,GAAG,IAAI,CAACJ,MAAM;EAGrC;EAEAK,WAAWA,CAAA;IACT,IAAG,IAAI,CAACR,KAAK,EAAC;MACZS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAACJ,EAAE,EAAE,IAAI,CAACW,cAAc,CAACX,EAAE,EAAE,IAAI,CAACI,KAAK,CAAC;MAC9D,IAAI,CAACZ,WAAW,CAACoB,WAAW,CAAC,IAAI,CAACR,KAAK,CAACJ,EAAE,EAAE,IAAI,CAACW,cAAc,CAACX,EAAE,EAAE,IAAI,CAACI,KAAK,CAAC,CAACF,SAAS,EAAE;MAC3F,IAAI,CAACT,YAAY,GAAG,IAAI;;EAE5B;EAEAsB,aAAaA,CAAA;IACXF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,cAAc,CAACK,IAAI,CAAC;IACrC,OAAO,IAAI,CAACL,cAAc,KAAK,IAAI,CAACJ,MAAM;EAC5C;CAGD;AA7CYnB,oBAAoB,GAAA6B,UAAA,EALhC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWhC,oBAAoB,CA6ChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}